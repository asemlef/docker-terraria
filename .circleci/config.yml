version: 2.1

orbs:
  docker: circleci/docker@2.0.1

jobs:
  build:
    working_directory: ~/terraria
    docker:
      - image: cimg/base:2022.01
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Build docker image
          command: docker build -t ghcr.io/asemlef/terraria .
      - run:
          name: Save image to cache
          command: docker save -o ~/terraria/app.tar ghcr.io/asemlef/terraria
      - persist_to_workspace:
          root: .
          paths: app.tar

  test:
    working_directory: ~/terraria
    machine:
      image: ubuntu-2004:202010-01
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Import docker image
          command: docker load -i "$PWD/app.tar"
      - run:
          name: Run tests
          command: |
            docker run -id --volume "$PWD/.circleci/World.wld:/data/Worlds/World.wld" --name terraria ghcr.io/asemlef/terraria
            sleep 10; docker exec terraria nc -z localhost 7777
      - run:
          name: Capture logs
          command: docker logs terraria > terraria.log
          when: always  # this will run even if other steps fail
      - store_artifacts:
          path: ~/terraria/terraria.log

  deploy:
    docker:
      - image: cimg/base:2022.01
    steps:
      - setup_remote_docker
      - attach_workspace:
          at: .
      - run:
          name: Import docker image
          command: docker load -i "$PWD/app.tar"
      - run:
          name: Upload docker image
          command: |
            echo "$GHCR_PAT" | docker login ghcr.io -u asemlef --password-stdin
            docker push ghcr.io/asemlef/terraria:latest

  pr-check:
    docker:
      - image: cimg/base:2022.01
    steps:
      - run:
          name: Check if PR
          command: |
            echo "Checking if pull request"
            if [ "${CIRCLE_PULL_REQUEST##*/}" != "" ]; then
              echo "Is a pull request"
            else
              echo "Is not a pull request"
            fi

workflows:
  build-and-test:
    jobs:
      - pr-check
      - build
      - test:
          requires:
            - build
      - deploy:
          requires:
            - test
          filters:
            branches:
              only:
                - main
